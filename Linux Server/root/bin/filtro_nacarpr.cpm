#!/bin/bash
# Filtro de impresión para Lexmark Cloud Print Manager
# Preparado para BBVA por Javier Robles (Lexmark International)
# E-mail: antonio@robles.ai
# Usar set -x para activar modo debug (trace de comandos)
# set -x
# AVISO: VERSION COMPATIBLE SOLO CON LINUX SUSE 12 Y LEXMARK CLOUD PRINT MANAGER
# Fecha de actualización: v202510231800
rm=0

if [ -n "$6" ]
then
  file="$6"
else
  file=$(mktemp)
  cat > $file
  let rm++
fi

echo "==================================================v202509150000" >> /tmp/lexmark.log
date >> /tmp/lexmark.log
echo "1: "$1 >> /tmp/lexmark.log
echo "2: "$2 >> /tmp/lexmark.log
echo "3: "$3 >> /tmp/lexmark.log
echo "4: "$4 >> /tmp/lexmark.log
echo "5: "$5 >> /tmp/lexmark.log
echo "6: "$6 >> /tmp/lexmark.log
SPOOLID=$1
SPOOLPATH=$6
SPOOLNAME=$3
HOSTID=$(hostname)
SPOOLTYPE=$(/usr/bin/file $file | cut -d':' -f2)
PUESTO=$(lpstat -W all -u | grep "\-"$1 | cut -d \- -f1)
USUARIO=$(finger | grep -m1 $PUESTO | cut -d ' ' -f1 | rev | cut -d '.' -f1 | rev)
if [ -z "$USUARIO" ]; then
  USUARIO=$2
fi 
KEY=$(echo ${PUESTO:1:4})

echo "Spool ID: "$SPOOLID >> /tmp/lexmark.log
echo "Spool Path: "$SPOOLPATH >> /tmp/lexmark.log
echo "Spool Name: "$SPOOLNAME >> /tmp/lexmark.log
echo "Spool Type:"$SPOOLTYPE >> /tmp/lexmark.log
echo "Puesto: "$PUESTO >> /tmp/lexmark.log
echo "Key: "$KEY >> /tmp/lexmark.log
echo "Usuario: "$USUARIO  >> /tmp/lexmark.log
echo "Host ID: "$HOSTID >> /tmp/lexmark.log

# Configuración de plantilla (crea OFF por defecto)
CONFIG="/tmp/lexmark_filtro.config"
if [ ! -f "$CONFIG" ]; then
  echo "PLANTILLA_GRANDE=OFF" > "$CONFIG"
fi
PG=$(grep -E "^PLANTILLA_GRANDE=" "$CONFIG" | tail -n1 | cut -d= -f2)
[ -z "$PG" ] && PG="OFF"
echo "PLANTILLA_GRANDE=$PG" >> /tmp/lexmark.log

# Variables de nomenclatura desde $PUESTO: w0###0SpXX (10 caracteres)
AGENCIA="${PUESTO:2:3}"     # ###
SERVLIN="${PUESTO:6:1}"     # S
POSXX="${PUESTO:8:2}"       # XX (string con cero a la izquierda)
# Normaliza XX a entero seguro
XX=$((10#$POSXX))

# Cálculo de YY según plantilla
YY=$XX
if [ "$PG" = "ON" ]; then
  if [ $XX -ge 11 ] && [ $XX -le 20 ]; then
    echo "Error: Número de puesto fuera de rango permitido (11–20) para PLANTILLA_GRANDE=ON" >> /tmp/lexmark.log
    [ $rm -gt 0 ] && rm $file
    exit 1
  elif [ $XX -ge 21 ]; then
    YY=$((XX-10))
  fi
fi
# YY con dos dígitos
YY2=$(printf "%02d" $YY)

# Ya no se requiere PRQUEUE="PrintRelease"
# WINHOST queda referencial (no usado para enrutamiento directo)
WINHOST="w1${PUESTO:1}.pe.igrupobbva"
echo "Windows Host (referencial): $WINHOST" >> /tmp/lexmark.log

# Cola CUPS dinámica: w10###0SpYY  (usa S de Linux; puede no coincidir con Windows)
CUPS_QUEUE="w10${AGENCIA}0${SERVLIN}p${YY2}"
echo "Cola CUPS dinámica calculada: $CUPS_QUEUE" >> /tmp/lexmark.log

MAPFILE="/tmp/win_hostname_user.txt"

# Búsqueda por similitud del primer hostname Windows que coincida con w10###0?pYY (S variable, posible sufijo letra antes del '|')
SEARCH_REGEX="^w10${AGENCIA}0[0-9]p${YY2}[A-Za-z]?\\|"
LINEA=$(grep -E "$SEARCH_REGEX" "$MAPFILE" 2>/dev/null | head -n1)

if [ -z "$LINEA" ]; then
  echo "Error: No se encontró hostname Windows por similitud ($SEARCH_REGEX) en $MAPFILE" >> /tmp/lexmark.log
  [ $rm -gt 0 ] && rm $file
  exit 1
fi

GENERICO=$(echo "$LINEA" | cut -d '|' -f2 | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')
WINIP=$(echo "$LINEA" | cut -d '|' -f3 | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')
WINHOST_MATCH=$(echo "$LINEA" | cut -d '|' -f1)

echo "Match hostname (mapfile): $WINHOST_MATCH" >> /tmp/lexmark.log
echo "Usuario genérico (mapfile): === $GENERICO ===" >> /tmp/lexmark.log
echo "Windows IP (mapfile): $WINIP" >> /tmp/lexmark.log

PORTOPEN=$(bash -c "</dev/tcp/$WINIP/515" 2>/dev/null && echo 1 || echo 0)
if [ "$PORTOPEN" -ne 1 ]; then
  echo "Error: El puerto 515 no está abierto en $WINIP" >> /tmp/lexmark.log
  [ $rm -gt 0 ] && rm $file
  exit 1
fi

EXPECT_URI="lpd://$WINIP:515/LexmarkBBVA"

EXISTE=$(lpstat -v | grep -c "$CUPS_QUEUE")
echo "Existe Cola: $EXISTE" >> /tmp/lexmark.log
if [ "$EXISTE" -eq 0 ]; then
  echo "Creando cola CUPS $CUPS_QUEUE..." >> /tmp/lexmark.log
  sudo lpadmin -p $CUPS_QUEUE -D 'Dynamic Lexmark CPM Queue' -L 'CPM' -E -v "$EXPECT_URI" -P /root/bin/Lexmark.Cups.ppd.gz 1>> /tmp/lexmark.log 2>> /tmp/lexmark.log
  echo "Cola $CUPS_QUEUE debe apuntar a $WINIP" >> /tmp/lexmark.log
  cupsenable "$CUPS_QUEUE"
  cupsaccept "$CUPS_QUEUE"
else
  echo "Cola $CUPS_QUEUE ya existe." >> /tmp/lexmark.log
  CURURI=$(lpstat -v "$CUPS_QUEUE" 2>/dev/null | awk -F' for .*: ' '{print $2}')
  echo "URI actual: $CURURI" >> /tmp/lexmark.log
  if [ "$CURURI" != "$EXPECT_URI" ] && [ -n "$CURURI" ]; then
    echo "Actualizando URI de $CUPS_QUEUE a $EXPECT_URI..." >> /tmp/lexmark.log
    sudo lpadmin -p "$CUPS_QUEUE" -v "$EXPECT_URI" 1>> /tmp/lexmark.log 2>> /tmp/lexmark.log
    cupsaccept "$CUPS_QUEUE"
    cupsenable "$CUPS_QUEUE"
  fi
fi

SUBHEADER=$(
cat << EOF
@PJL JOB
@PJL SET STRINGCODESET=UTF8
@PJL SET USERNAME="$GENERICO"
@PJL SET LMULTIPAGEPRINT=OFF
@PJL COMMENT Lexmark Universal v2
@PJL LJOBINFO USERID="$GENERICO" HOSTID="$HOSTID"
@PJL SET JOBNAME="$SPOOLNAME"
@PJL SET HOLD=OFF
@PJL SET HOLDKEY="$KEY"
@PJL SET QTY=1
@PJL SET LDUPLICATEHELDJOBS=SAVE
@PJL SET LCOLORMODEL=BLACK
@PJL SET RENDERMODE=GRAYSCALE
@PJL SET LPARM:PCL LFONTPRIORITY=NORESOLUTION
@PJL SET TIMEOUT=0
@PJL SET LCOLLATION=ON
@PJL SET PAGEPROTECT=OFF
@PJL SET WIDEA4=NO
@PJL SET RESOLUTION=600
@PJL SET LIMAGEENHANCE=OFF
@PJL SET BITSPERPIXEL=1
EOF)

if [ $(echo $SPOOLTYPE | grep -Ec "HP Printer Job|PJL encapsulated PostScript document text") -gt 0 ]
then
  FORM_LIST="UA011"
  FORM=$(head -1 $file | cut -d= -f2 | tr -d "\"\r\n")
  if [ $(echo $FORM_LIST | grep -c $FORM) -gt 0 ]
  then
    echo "UA011 Carta Fianza, se agrega cambio de bandeja l2H y firma PCL5 1B253041" >> /tmp/lexmark.log
    (
    head -1 $file
    echo "$SUBHEADER"
    tail -n +2 $file
    ) | sed 's/\&l1H/\&l2H/' | perl -0777 -pe 's/(@PJL ENTER LANGUAGE = PCL\r\n\x1b)/$1\x25\x30\x41\x1b/' > /tmp/job_$1.prn
    echo "Enviando PCL5 Carta Fianza a: $CUPS_QUEUE Usuario: $GENERICO Jobname: $3 File:/tmp/job_$1.prn" >> /tmp/lexmark.log
    lp -d $CUPS_QUEUE -U $GENERICO -t "$3" /tmp/job_$1.prn > /dev/null
    rm /tmp/job_$1.prn
  else
    echo "Job PCL 5 se agrega 1B253041" >> /tmp/lexmark.log
    (
    head -1 $file
    echo "$SUBHEADER"
    tail -n +2 $file
    ) | perl -0777 -pe 's/(@PJL ENTER LANGUAGE = PCL\r\n\x1b)/$1\x25\x30\x41\x1b/' > /tmp/job_$1.prn
    #xxd -l 700 /tmp/job_$1.prn >> /tmp/lexmark.log
    echo "Enviando PCL5 a: $CUPS_QUEUE Usuario: $GENERICO Jobname: $3 File:/tmp/job_$1.prn" >> /tmp/lexmark.log
    lp -d $CUPS_QUEUE -U $GENERICO -t "$3" /tmp/job_$1.prn > /dev/null
    rm /tmp/job_$1.prn
  fi
else
(
  echo -e "\033%-12345X$SUBHEADER"
  if [ $(echo $SPOOLTYPE | grep -c "PostScript") -gt 0 ]
  then
    printf "@PJL ENTER LANGUAGE = Postscript \012\001M"
    echo "Spool PostScript, se añade CPM Mark <0A014D>" >> /tmp/lexmark.log
  else
    echo -e "@PJL ENTER LANGUAGE = PCL\033%-12345X"
    echo "Spool Genérico, se añade PCL Header Standard" >> /tmp/lexmark.log 
  fi
  cat $file
) | perl -0777 -pe 's/(@PJL ENTER LANGUAGE = PCL\r\n\x1b)/$1\x25\x30\x41\x1b/' > /tmp/job_$1.prn

echo "Enviando Job a: $CUPS_QUEUE Usuario: $GENERICO Jobname: $3 File:/tmp/job_$1.prn" >> /tmp/lexmark.log
lp -d $CUPS_QUEUE -U $GENERICO -t "$3" /tmp/job_$1.prn > /dev/null
rm /tmp/job_$1.prn
fi
echo "Spool CPM transferido correctamente. Se enviará spool original a Tea4Cups." >> /tmp/lexmark.log

TEA4CUPS_QUEUE="p${PUESTO:1}"
EXISTE=$(lpstat -v | grep -c "$TEA4CUPS_QUEUE")
echo "Existe Cola Tea4Cups: $EXISTE" >> /tmp/lexmark.log
if [ "$EXISTE" -eq 0 ]; then
  echo "No existe cola Tea4Cups $TEA4CUPS_QUEUE. Se omitirá envío a Tea4Cups." >> /tmp/lexmark.log
else
  echo "Enviando spool original a Tea4Cups: $TEA4CUPS_QUEUE con usuario $USUARIO" >> /tmp/lexmark.log
  lp -d $TEA4CUPS_QUEUE -U $USUARIO -t "$3" $file > /dev/null
fi

[ $rm -gt 0 ] && rm $file
exit 0